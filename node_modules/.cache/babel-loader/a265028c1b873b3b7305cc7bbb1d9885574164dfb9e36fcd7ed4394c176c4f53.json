{"ast":null,"code":"var _jsxFileName = \"/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/comments.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport './Todo.css';\nimport { useGetTodosQuery, useGetCommentsQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../features/api/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    data: comments,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetCommentsQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  function Content() {\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }, this);\n    if (isError) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }, this);\n    return isSuccess && comments.map(comment => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: comment.postId % 2 === 0 //checked if postId is even number\n          ,\n          id: comment.id\n          //onChange={() => updateTodo({ ...comment, completed: !comment.completed })}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: comment.id,\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"trash\",\n        onClick: () => deleteTodo({\n          id: comment.id\n        }),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(Comments, \"ORvc+JMjtCtP5A4sEzU2bTR2q8c=\", false, function () {\n  return [useGetCommentsQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["FontAwesomeIcon","faTrash","faUpload","useGetTodosQuery","useGetCommentsQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","Comments","_s","data","comments","isLoading","isSuccess","isError","error","addTodo","updateTodo","deleteTodo","Content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","type","checked","postId","id","htmlFor","name","className","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/comments.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport './Todo.css';\n\nimport {\n   useGetTodosQuery,\n   useGetCommentsQuery,\n   useAddTodoMutation,\n   useUpdateTodoMutation,\n   useDeleteTodoMutation\n} from \"../features/api/apiSlice\"\n\n\nconst Comments = () => {\n   const {\n      data: comments,\n      isLoading,\n      isSuccess,\n      isError,\n      error\n   } = useGetCommentsQuery()\n\n   const [addTodo] = useAddTodoMutation()\n   const [updateTodo] = useUpdateTodoMutation()\n   const [deleteTodo] = useDeleteTodoMutation()\n\n   function Content () {\n      if (isLoading) return <p>Loading..</p>\n      if (isError) return <p>Error</p>\n      return(\n          isSuccess && \n          comments.map((comment) => ( \n              <article key={comment.id}>\n                  <div>\n                     <input\n                        type=\"checkbox\"\n                        checked={comment.postId%2===0} //checked if postId is even number\n                        id={comment.id}\n                        //onChange={() => updateTodo({ ...comment, completed: !comment.completed })}\n                     />\n                     <label htmlFor={comment.id}>{comment.name}</label>\n                  </div>\n                  <button className=\"trash\" onClick={() => deleteTodo({ id: comment.id })}>\n                <FontAwesomeIcon icon={faTrash} />\n             </button>\n              </article> \n           ))\n      )\n   }\n\n   return (\n      <Content />\n   )\n}\n\nexport default Comments\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,EAAEC,QAAQ,QAAQ,mCAAmC;AACrE,OAAO,YAAY;AAEnB,SACGC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QACjB,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IACHC,IAAI,EAAEC,QAAQ;IACdC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACH,CAAC,GAAGb,mBAAmB,CAAC,CAAC;EAEzB,MAAM,CAACc,OAAO,CAAC,GAAGb,kBAAkB,CAAC,CAAC;EACtC,MAAM,CAACc,UAAU,CAAC,GAAGb,qBAAqB,CAAC,CAAC;EAC5C,MAAM,CAACc,UAAU,CAAC,GAAGb,qBAAqB,CAAC,CAAC;EAE5C,SAASc,OAAOA,CAAA,EAAI;IACjB,IAAIP,SAAS,EAAE,oBAAOL,OAAA;MAAAa,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IACtC,IAAIV,OAAO,EAAE,oBAAOP,OAAA;MAAAa,QAAA,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IAChC,OACIX,SAAS,IACTF,QAAQ,CAACc,GAAG,CAAEC,OAAO,iBACjBnB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,gBACGb,OAAA;UACGoB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEF,OAAO,CAACG,MAAM,GAAC,CAAC,KAAG,CAAE,CAAC;UAAA;UAC/BC,EAAE,EAAEJ,OAAO,CAACI;UACZ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFjB,OAAA;UAAOwB,OAAO,EAAEL,OAAO,CAACI,EAAG;UAAAV,QAAA,EAAEM,OAAO,CAACM;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNjB,OAAA;QAAQ0B,SAAS,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAAC;UAAEY,EAAE,EAAEJ,OAAO,CAACI;QAAG,CAAC,CAAE;QAAAV,QAAA,eAC1Eb,OAAA,CAACT,eAAe;UAACqC,IAAI,EAAEpC;QAAQ;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA,GAZME,OAAO,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaf,CACX,CAAC;EAEV;EAEA,oBACGjB,OAAA,CAACY,OAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEjB,CAAC;AAAAf,EAAA,CAxCKD,QAAQ;EAAA,QAOPN,mBAAmB,EAELC,kBAAkB,EACfC,qBAAqB,EACrBC,qBAAqB;AAAA;AAAA+B,EAAA,GAXvC5B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}