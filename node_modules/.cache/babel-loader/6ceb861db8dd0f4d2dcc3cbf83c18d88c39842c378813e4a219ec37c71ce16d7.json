{"ast":null,"code":"var _jsxFileName = \"/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/todo.js\",\n  _s = $RefreshSig$();\n//This file will contain the `Todo` component, \n//which will handle the display and management of the todo list.\n\n//import:\n//fontawesomeicon IMPORT\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg/icons';\n//React\nimport { useState } from 'react';\n//the necessary hooks and components from `react-redux`\nimport { useSelector, useDispatch } from \"react-redux\";\n//the actions from your `todoSlice`\nimport { addTodo, toggleComplete, deleteTodo } from \"./todoSlice\";\nimport './Todo.css';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../features/api/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const {\n    data: todoList,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  const todos = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n  const handleInputChange = e => {\n    e.preventDefault();\n    //setText(e.target.value);\n    addTodo({\n      userId: 1,\n      title: newTodo,\n      completed: false\n    });\n    setNewTodo('');\n  };\n  const handleAddTodo = () => {\n    if (text) {\n      dispatch(addTodo(text));\n      setText(\"\");\n    }\n  };\n  const handleToggleComplete = id => {\n    dispatch(toggleComplete(id));\n  };\n  const handleDeleteTodo = id => {\n    dispatch(deleteTodo(id));\n  };\n  let content;\n  if (isLoading) {\n    contnet = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this);\n  } else if (isSuccess) {\n    content = todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            id: todo.id,\n            onChange: () => updatedTodo({\n              ...todo,\n              completed: !todo.completed\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: todo.id,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"trash\",\n          onClick: () => deleteTodo({\n            id: todo.id\n          }),\n          children: /*#__PURE__*/_jsxDEV(FontAwsomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n    });\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: text,\n      placeholder: \"Enter a task\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleAddTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"bullet\",\n        style: {\n          textDecoration: todo.completed ? \"line-through\" : \"none\"\n        },\n        children: [todo.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleToggleComplete(todo.id),\n          children: [todo.completed ? \"Mark Incomplete\" : \"Mark Complete\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }, this), \" \"]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n};\n_s(Todo, \"s8XFJ4ACo1RrWFIgy1+C7IM+pJc=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation, useSelector, useDispatch];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["FontAwesomeIcon","faTrash","faUpload","useState","useSelector","useDispatch","addTodo","toggleComplete","deleteTodo","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","Todo","_s","text","setText","data","todoList","isLoading","isSuccess","isError","error","updateTodo","todos","state","dispatch","handleInputChange","e","preventDefault","userId","title","newTodo","completed","setNewTodo","handleAddTodo","handleToggleComplete","id","handleDeleteTodo","content","contnet","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","className","type","checked","onChange","updatedTodo","htmlFor","onClick","FontAwsomeIcon","icon","value","placeholder","style","textDecoration","_c","$RefreshReg$"],"sources":["/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/todo.js"],"sourcesContent":["//This file will contain the `Todo` component, \n//which will handle the display and management of the todo list.\n\n//import:\n//fontawesomeicon IMPORT\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg/icons';\n//React\nimport { useState } from 'react';\n//the necessary hooks and components from `react-redux`\nimport { useSelector, useDispatch } from \"react-redux\";\n//the actions from your `todoSlice`\nimport { addTodo, toggleComplete, deleteTodo } from \"./todoSlice\";\nimport './Todo.css';\n\nimport {\n   useGetTodosQuery,\n   useAddTodoMutation,\n   useUpdateTodoMutation,\n   useDeleteTodoMutation\n} from \"../features/api/apiSlice\"\n\nconst Todo = () => {\n   const [text, setText] = useState(\"\");\n\n   const {\n      data: todoList,\n      isLoading,\n      isSuccess,\n      isError,\n      error\n   } = useGetTodosQuery()\n   const [addTodo] = useAddTodoMutation()\n   const [updateTodo] = useUpdateTodoMutation()\n   const [deleteTodo] = useDeleteTodoMutation()\n\n\n\n   const todos = useSelector((state) => state.todos);\n   const dispatch = useDispatch();\n\n   const handleInputChange = (e) => {\n      e.preventDefault();\n      //setText(e.target.value);\n      addTodo({ userId: 1, title: newTodo, completed: false })\n      setNewTodo('')\n   };\n\n   const handleAddTodo = () => {\n      if (text){\n         dispatch(addTodo(text));\n         setText(\"\");\n      }\n   };\n\n   const handleToggleComplete = (id) => {\n      dispatch(toggleComplete(id));\n   };\n\n   const handleDeleteTodo = (id) => {\n      dispatch(deleteTodo(id));\n   };\n\n   let content;\n   if(isLoading){\n      contnet = <p>Loading...</p>\n   } else if(isSuccess){\n      content = todos.map(todo => {\n         return (\n            <article key={todo.id}>\n               <div className='todo'>\n                  <input \n                     type=\"checkbox\"\n                     checked={todo.completed}\n                     id={todo.id}\n                     onChange={() => updatedTodo({...todo, completed: !todo.completed})}\n                  / >\n                     <label htmlFor={todo.id}>{todo.title}</label>\n               </div>\n               <button className=\"trash\" onClick={() => deleteTodo({ id: todo.id })}>\n                  <FontAwsomeIcon icon={faTrash} />\n               </button>\n            </article>\n         )\n      })\n   } else if(isError) {\n      content = <p>{error}</p>\n   }\n\n   return(\n      <div className=\"TodoDiv\">\n         <h1 className=\"header\">To-Do List</h1>\n         <input \n            className=\"input\"\n            type=\"text\" \n            value={text} \n            placeholder=\"Enter a task\" \n            onChange={handleInputChange}\n         />\n         {\" \"}\n         <button \n            className=\"button\"\n            onClick={handleAddTodo}\n         > \n            Add \n         </button>\n         <ul className=\"list\">\n            {todos.map((todo) => (\n               <li\n                  className=\"bullet\"\n                  key={todo.id}\n                  style={{\n                     textDecoration: todo.completed ? \"line-through\" : \"none\",\n                  }}\n               >\n                  {todo.text}\n                  {\" \"}\n                  <button \n                     className=\"button\"\n                     onClick={() => handleToggleComplete(todo.id)}\n                  >\n                     {todo.completed ? \"Mark Incomplete\" : \"Mark Complete\"}{\" \"}\n                  </button>\n                  {\" \"}\n                  <button \n                     className=\"button\"\n                     onClick={() => handleDeleteTodo(todo.id)}\n                  > \n                     Delete \n                  </button>\n                  {\" \"}\n               </li>\n            ))}{\" \"}\n         </ul>{\" \"}\n      </div>\n   );\n};\n\nexport default Todo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}