{"ast":null,"code":"var _jsxFileName = \"/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/todoList.js\",\n  _s = $RefreshSig$();\n//This file will contain the `Todo` component, \n//which will handle the display and management of the todo list.\n\n//import:\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\n//React\nimport { useState } from 'react';\n//the necessary hooks and components from `react-redux`\n//import { useSelector, useDispatch } from \"react-redux\";\n//the actions from your `todoSlice`\n//import { addTodo, toggleComplete, deleteTodo } from \"./todoSlice\";\nimport './Todo.css';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../features/api/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  //text = newTodo\n  //setText = setNewTodo\n\n  const {\n    data: todo,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n\n  //const todos = useSelector((state) => state.todos);\n  //const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    //setText(e.target.value);\n    addTodo({\n      userId: 1,\n      title: newText,\n      completed: false\n    });\n    setText('');\n  };\n\n  /*const handleAddTodo = () => {\n     if (text){\n        dispatch(addTodo(text));\n        setText(\"\");\n     }\n  };\n   const handleToggleComplete = (id) => {\n     dispatch(toggleComplete(id));\n  };\n   const handleDeleteTodo = (id) => {\n     dispatch(deleteTodo(id));\n  };*/\n\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this);\n  } else if (isSuccess) {\n    content = todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            id: todo.id,\n            onChange: () => updateTodo({\n              ...todo,\n              completed: !todo.completed\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: todo.id,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"trash\",\n          onClick: () => deleteTodo({\n            id: todo.id\n          }),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this);\n    });\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo\",\n        children: \"Enter a new todo item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          //className=\"input\"\n          type: \"text\",\n          id: \"new-todo\",\n          value: newText,\n          placeholder: \"Enter a new task\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n};\n_s(TodoList, \"wOo/YFmpkZh5YSjNmjJQ8jpCZPw=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = TodoList;\nexport default TodoList;\n\n/*<ul className=\"list\">\n            {todos.map((todo) => (\n               <li\n                  className=\"bullet\"\n                  key={todo.id}\n                  style={{\n                     textDecoration: todo.completed ? \"line-through\" : \"none\",\n                  }}\n               >\n                  {todo.text}\n                  {\" \"}\n                  <button \n                     className=\"button\"\n                     onClick={() => handleToggleComplete(todo.id)}\n                  >\n                     {todo.completed ? \"Mark Incomplete\" : \"Mark Complete\"}{\" \"}\n                  </button>\n                  {\" \"}\n                  <button \n                     className=\"button\"\n                     onClick={() => handleDeleteTodo(todo.id)}\n                  > \n                     Delete \n                  </button>\n                  {\" \"}\n               </li>\n            ))}{\" \"}\n         </ul>{\" \"}\n         */\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["FontAwesomeIcon","faTrash","faUpload","useState","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","TodoList","_s","text","setText","data","todo","isLoading","isSuccess","isError","error","addTodo","updateTodo","deleteTodo","handleInputChange","e","preventDefault","userId","title","newText","completed","content","children","fileName","_jsxFileName","lineNumber","columnNumber","todos","map","className","type","checked","id","onChange","htmlFor","onClick","icon","onSubmit","value","placeholder","target","_c","$RefreshReg$"],"sources":["/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/todoList.js"],"sourcesContent":["//This file will contain the `Todo` component, \n//which will handle the display and management of the todo list.\n\n//import:\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\n//React\nimport { useState } from 'react';\n//the necessary hooks and components from `react-redux`\n//import { useSelector, useDispatch } from \"react-redux\";\n//the actions from your `todoSlice`\n//import { addTodo, toggleComplete, deleteTodo } from \"./todoSlice\";\nimport './Todo.css';\n\nimport {\n   useGetTodosQuery,\n   useAddTodoMutation,\n   useUpdateTodoMutation,\n   useDeleteTodoMutation\n} from \"../features/api/apiSlice\"\n\nconst TodoList = () => {\n   const [text, setText] = useState(\"\");\n   //text = newTodo\n   //setText = setNewTodo\n\n   const {\n      data: todo,\n      isLoading,\n      isSuccess,\n      isError,\n      error\n   } = useGetTodosQuery()\n   const [addTodo] = useAddTodoMutation()\n   const [updateTodo] = useUpdateTodoMutation()\n   const [deleteTodo] = useDeleteTodoMutation()\n\n\n\n   //const todos = useSelector((state) => state.todos);\n   //const dispatch = useDispatch();\n\n   const handleInputChange = (e) => {\n      e.preventDefault();\n      //setText(e.target.value);\n      addTodo({ userId: 1, title: newText, completed: false })\n      setText('')\n   }\n\n   /*const handleAddTodo = () => {\n      if (text){\n         dispatch(addTodo(text));\n         setText(\"\");\n      }\n   };\n\n   const handleToggleComplete = (id) => {\n      dispatch(toggleComplete(id));\n   };\n\n   const handleDeleteTodo = (id) => {\n      dispatch(deleteTodo(id));\n   };*/\n\n   let content;\n   if(isLoading){\n      content = <p>Loading...</p>\n   } else if (isSuccess) {\n      content = todos.map(todo => { \n            return (\n              <article key={todo.id}>\n                  <div className=\"todo\">\n                      <input\n                          type=\"checkbox\"\n                          checked={todo.completed}\n                          id={todo.id}\n                          onChange={() => updateTodo({ ...todo, completed: !todo.completed })}\n                      />\n                      <label htmlFor={todo.id}>{todo.title}</label>\n                  </div>\n                  <button className=\"trash\" onClick={() => deleteTodo({ id: todo.id })}>\n                      <FontAwesomeIcon icon={faTrash} />\n                  </button>\n              </article>\n          )\n      })\n   } else if(isError) {\n      content = <p>{error}</p>\n   }\n   \n   return(\n      <div className=\"TodoDiv\">\n         <h1 className=\"header\">To-Do List</h1>\n         <form onSubmit={handleInputChange}>\n            <label htmlFor=\"new-todo\">Enter a new todo item</label>\n            <div className=\"new-todo\">\n               <input \n                  //className=\"input\"\n                  type=\"text\" \n                  id=\"new-todo\"\n                  value={newText}\n                  placeholder=\"Enter a new task\" \n                  onChange={(e) => setText(e.target.value)}\n               />\n               {\" \"}\n            </div>\n            <button className=\"button\" >\n               <FontAwesomeIcon icon = {faUpload} />\n            </button>\n         </form>\n                  \n         {content}\n         \n         \n      </div>\n   );\n};\n\nexport default TodoList;\n\n\n\n\n/*<ul className=\"list\">\n            {todos.map((todo) => (\n               <li\n                  className=\"bullet\"\n                  key={todo.id}\n                  style={{\n                     textDecoration: todo.completed ? \"line-through\" : \"none\",\n                  }}\n               >\n                  {todo.text}\n                  {\" \"}\n                  <button \n                     className=\"button\"\n                     onClick={() => handleToggleComplete(todo.id)}\n                  >\n                     {todo.completed ? \"Mark Incomplete\" : \"Mark Complete\"}{\" \"}\n                  </button>\n                  {\" \"}\n                  <button \n                     className=\"button\"\n                     onClick={() => handleDeleteTodo(todo.id)}\n                  > \n                     Delete \n                  </button>\n                  {\" \"}\n               </li>\n            ))}{\" \"}\n         </ul>{\" \"}\n         */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}