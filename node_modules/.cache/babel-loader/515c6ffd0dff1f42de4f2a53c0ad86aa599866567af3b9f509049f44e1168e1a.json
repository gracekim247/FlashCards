{"ast":null,"code":"var _jsxFileName = \"/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/comments.js\",\n  _s = $RefreshSig$();\nimport { useGetTodosQuery, useGetCommentsQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../features/api/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    data: comments,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetCommentsQuery();\n  function Content() {\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }, this);\n    if (isError) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this);\n    return isSuccess && comments.map(comment => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: comment.postId % 2 === 0 //checked if postId is even number\n          ,\n          id: comment.id\n          //onChange={() => updateTodo({ ...comment, completed: !comment.completed })}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: comment.id,\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"trash\",\n        onClick: () => deleteTodo({\n          id: comment.id\n        }),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(Comments, \"nMtXqghFpUlhzP4Rbn5HGhajiAA=\", false, function () {\n  return [useGetCommentsQuery];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useGetTodosQuery","useGetCommentsQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","Comments","_s","data","comments","isLoading","isSuccess","isError","error","Content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","type","checked","postId","id","htmlFor","name","className","onClick","deleteTodo","FontAwesomeIcon","icon","faTrash","_c","$RefreshReg$"],"sources":["/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/comments.js"],"sourcesContent":["import {\n   useGetTodosQuery,\n   useGetCommentsQuery,\n   useAddTodoMutation,\n   useUpdateTodoMutation,\n   useDeleteTodoMutation\n} from \"../features/api/apiSlice\"\n\nconst Comments = () => {\n   const {\n      data: comments,\n      isLoading,\n      isSuccess,\n      isError,\n      error\n   } = useGetCommentsQuery()\n\n\n   function Content () {\n      if (isLoading) return <p>Loading..</p>\n      if (isError) return <p>Error</p>\n      return(\n          isSuccess && \n          comments.map((comment) => ( \n              <article key={comment.id}>\n                  <div>\n                     <input\n                        type=\"checkbox\"\n                        checked={comment.postId%2===0} //checked if postId is even number\n                        id={comment.id}\n                        //onChange={() => updateTodo({ ...comment, completed: !comment.completed })}\n                     />\n                     <label htmlFor={comment.id}>{comment.name}</label>\n                  </div>\n                  <button className=\"trash\" onClick={() => deleteTodo({ id: comment.id })}>\n                <FontAwesomeIcon icon={faTrash} />\n             </button>\n              </article> \n           ))\n      )\n   }\n\n   return (\n      <Content />\n   )\n}\n\nexport default Comments\n"],"mappings":";;AAAA,SACGA,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QACjB,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IACHC,IAAI,EAAEC,QAAQ;IACdC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACH,CAAC,GAAGb,mBAAmB,CAAC,CAAC;EAGzB,SAASc,OAAOA,CAAA,EAAI;IACjB,IAAIJ,SAAS,EAAE,oBAAOL,OAAA;MAAAU,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IACtC,IAAIP,OAAO,EAAE,oBAAOP,OAAA;MAAAU,QAAA,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IAChC,OACIR,SAAS,IACTF,QAAQ,CAACW,GAAG,CAAEC,OAAO,iBACjBhB,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,gBACGV,OAAA;UACGiB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEF,OAAO,CAACG,MAAM,GAAC,CAAC,KAAG,CAAE,CAAC;UAAA;UAC/BC,EAAE,EAAEJ,OAAO,CAACI;UACZ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFd,OAAA;UAAOqB,OAAO,EAAEL,OAAO,CAACI,EAAG;UAAAV,QAAA,EAAEM,OAAO,CAACM;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNd,OAAA;QAAQuB,SAAS,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAMC,UAAU,CAAC;UAAEL,EAAE,EAAEJ,OAAO,CAACI;QAAG,CAAC,CAAE;QAAAV,QAAA,eAC1EV,OAAA,CAAC0B,eAAe;UAACC,IAAI,EAAEC;QAAQ;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA,GAZME,OAAO,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaf,CACX,CAAC;EAEV;EAEA,oBACGd,OAAA,CAACS,OAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEjB,CAAC;AAAAZ,EAAA,CArCKD,QAAQ;EAAA,QAOPN,mBAAmB;AAAA;AAAAkC,EAAA,GAPpB5B,QAAQ;AAuCd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}