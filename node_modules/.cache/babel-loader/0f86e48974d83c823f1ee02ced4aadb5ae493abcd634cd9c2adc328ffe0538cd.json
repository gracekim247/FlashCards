{"ast":null,"code":"var _jsxFileName = \"/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/todoList.js\",\n  _s = $RefreshSig$();\n//This file will contain the `Todo` component, \n//which will handle the display and management of the todo list.\n\n//import:\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport './Todo.css';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../features/api/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [newText, setText] = useState('');\n  //newText = newTodo\n  //setText = setNewTodo\n\n  const {\n    data: todos,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  const handleInputChange = e => {\n    e.preventDefault();\n    //setText(e.target.value);\n    addTodo({\n      userId: 1,\n      title: newText,\n      completed: false\n    });\n    setText('');\n  };\n  const newItemSelection = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleInputChange,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-todo\",\n      children: \"Enter a new todo item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        //className=\"input\"\n        type: \"text\",\n        id: \"new-todo\",\n        value: newText,\n        placeholder: \"Enter a new task\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this);\n  } else if (isSuccess) {\n    content = todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            id: todo.id,\n            onChange: () => updateTodo({\n              ...todo,\n              completed: !todo.completed\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: todo.id,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"trash\",\n          onClick: () => deleteTodo({\n            id: todo.id\n          }),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this);\n    });\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this), newItemSelection, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n_s(TodoList, \"lXC9PXsovur0OyfMNsfRrcXUr/Y=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["FontAwesomeIcon","faTrash","faUpload","useState","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","TodoList","_s","newText","setText","data","todos","isLoading","isSuccess","isError","error","addTodo","updateTodo","deleteTodo","handleInputChange","e","preventDefault","userId","title","completed","newItemSelection","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","value","placeholder","onChange","target","icon","content","map","todo","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/gracekim/Desktop/SPEAKHIRE/todo-list/src/todos/todoList.js"],"sourcesContent":["//This file will contain the `Todo` component, \n//which will handle the display and management of the todo list.\n\n//import:\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport './Todo.css';\n\nimport {\n   useGetTodosQuery,\n   useAddTodoMutation,\n   useUpdateTodoMutation,\n   useDeleteTodoMutation\n} from \"../features/api/apiSlice\"\n\nconst TodoList = () => {\n   const [newText, setText] = useState('');\n   //newText = newTodo\n   //setText = setNewTodo\n\n   const {\n      data: todos,\n      isLoading,\n      isSuccess,\n      isError,\n      error\n   } = useGetTodosQuery()\n   const [addTodo] = useAddTodoMutation()\n   const [updateTodo] = useUpdateTodoMutation()\n   const [deleteTodo] = useDeleteTodoMutation()\n\n   const handleInputChange = (e) => {\n      e.preventDefault();\n      //setText(e.target.value);\n      addTodo({ userId: 1, title: newText, completed: false })\n      setText('')\n   }\n\n   const newItemSelection = \n      <form onSubmit={handleInputChange}>\n         <label htmlFor=\"new-todo\">Enter a new todo item</label>\n         <div className=\"new-todo\">\n            <input \n               //className=\"input\"\n               type=\"text\" \n               id=\"new-todo\"\n               value={newText}\n               placeholder=\"Enter a new task\" \n               onChange={(e) => setText(e.target.value)}\n            />\n            {\" \"}\n         </div>\n         <button className=\"button\" >\n            <FontAwesomeIcon icon = {faUpload} />\n         </button>\n      </form>\n      \n\n   let content;\n   if(isLoading){\n      content = <p>Loading...</p>\n   } else if (isSuccess) {\n      content = todos.map(todo => { \n            return (\n              <article key={todo.id}>\n                  <div>\n                      <input\n                          type=\"checkbox\"\n                          checked={todo.completed}\n                          id={todo.id}\n                          onChange={() => updateTodo({ ...todo, completed: !todo.completed })}\n                      />\n                      <label htmlFor={todo.id}>{todo.title}</label>\n                  </div>\n                  <button className=\"trash\" onClick={() => deleteTodo({ id: todo.id })}>\n                      <FontAwesomeIcon icon={faTrash} />\n                  </button>\n              </article>\n          )\n      })\n   } else if(isError) {\n      content = <p>{error}</p>\n   }\n   \n   return(\n      <div className=\"TodoDiv\">\n         <h1 className=\"header\">To-Do List</h1>\n         \n         {newItemSelection}\n                  \n         {content}\n         \n         \n      </div>\n   );\n};\n\nexport default TodoList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}